<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="postMapper">

    <!-- 게시글 본문 insert, 생성키를 recipeid에 채움 -->
    <insert id="insertPost" parameterType="com.recipetime.find.Model.Post" useGeneratedKeys="true" keyProperty="recipeid">
        INSERT INTO recipepost
        (recipetitle, recipecontent, recipeMainVidLink, recipewritedate, recipefixdate, recipeviews,
         ishotdisplay, isbestdisplay, isprivate, typeid, situationid, methodid, peopleid, timeid, difficultyid,
         recipedeactivate, recipedeactivatedate, isreport, userid)
        VALUES
        (#{recipetitle}, #{recipecontent}, #{recipeMainVidLink}, NOW(), NULL, 0,
         #{ishotdisplay}, #{isbestdisplay}, #{isprivate}, #{typeid}, #{situationid}, #{methodid}, #{peopleid}, #{timeid}, #{difficultyid},
         #{recipedeactivate}, NULL, #{isreport}, #{userid})
    </insert>

    <!-- 태그 리스트 일괄 삽입: parameter로 List<Tag> 전달 -->
    <insert id="insertTags" parameterType="java.util.List">
        INSERT INTO recipetag (recipeid, tagorder, tagname)
        VALUES
        <foreach collection="list" item="tag" separator=",">
            (#{tag.recipeid}, #{tag.tagorder}, #{tag.tagname})
        </foreach>
    </insert>

    <!-- 재료 일괄 삽입 -->
    <insert id="insertIngredients" parameterType="java.util.List">
        INSERT INTO ingredients (recipeid, ingorder, ingname, ingquantity, unit, exp)
        VALUES
        <foreach collection="list" item="ing" separator=",">
            (#{ing.recipeid}, #{ing.ingorder}, #{ing.ingname}, #{ing.ingquantity}, #{ing.unit}, #{ing.exp})
        </foreach>
    </insert>

    <!-- 순서 일괄 삽입 -->
    <insert id="insertSequences" parameterType="java.util.List">
        INSERT INTO recipesequence
        (recipeid, recipestep, `explain`, recipevidlink, ingactivate, toolactivate, fireactivate, tipactivate, ingexp, toolexp, fireexp, tipexp)
        VALUES
        <foreach collection="list" item="seq" separator=",">
            (#{seq.recipeid}, #{seq.recipestep}, #{seq.explain}, #{seq.recipevidlink},
             #{seq.ingactivate}, #{seq.toolactivate}, #{seq.fireactivate}, #{seq.tipactivate},
             #{seq.ingexp}, #{seq.toolexp}, #{seq.fireexp}, #{seq.tipexp})
        </foreach>
    </insert>
    
     <!-- insert single sequence (useGeneratedKeys to obtain recipestepid) -->
	  <insert id="insertSequence" parameterType="com.recipetime.find.Model.PostSequence" useGeneratedKeys="true" keyProperty="recipestepid">
	    INSERT INTO recipesequence (recipeid, recipestep, `explain`, recipevidlink, ingactivate, toolactivate, fireactivate, tipactivate, ingexp, toolexp, fireexp, tipexp)
	    VALUES (#{recipeid}, #{recipestep}, #{explain}, #{recipevidlink}, #{ingactivate}, #{toolactivate}, #{fireactivate}, #{tipactivate}, #{ingexp}, #{toolexp}, #{fireexp}, #{tipexp})
	  </insert>

    <!-- 첨부파일 일괄 삽입 -->
    <insert id="insertAttachments" parameterType="java.util.List">
        INSERT INTO attachment (fileorder, filename, fileuuid, fileext, ismain, recipeid)
        VALUES
        <foreach collection="list" item="att" separator=",">
            (#{att.fileorder}, #{att.filename}, #{att.fileuuid}, #{att.fileext}, #{att.ismain}, #{att.recipeid})
        </foreach>
    </insert>
    
    <!-- 시퀀스 일괄 삽입 -->
    <insert id="insertseqAttachments" parameterType="java.util.List">
        INSERT INTO attachment (fileorder, filename, fileuuid, fileext, ismain, recipestepid)
        VALUES
        <foreach collection="list" item="att" separator=",">
            (#{att.fileorder}, #{att.filename}, #{att.fileuuid}, #{att.fileext}, #{att.ismain}, #{att.recipestepid})
        </foreach>
    </insert>

    <!-- 전체 게시글 (간단) -->
    <select id="getAllPosts" resultType="com.recipetime.find.Model.Post">
        SELECT * FROM recipepost WHERE recipedeactivate = 0
    </select>
	
	<!-- 태그 불러오기 -->
	<select id="getTagsByRecipeId" parameterType="int" resultType="com.recipetime.find.Model.Tag">
	    SELECT recipeid, tagorder, tagname
	    FROM recipetag
	    WHERE recipeid = #{recipeid}
	    ORDER BY tagorder ASC
	</select>
	
	<!-- 카테고리 아이템 목록 불러오기 -->
	<select id="getCategoryItems" resultType="map">
	    SELECT itemid, itemname
	    FROM category_item
	</select>
	
	<!-- 카테고리 옵션 목록 불러오기 -->
	<select id="getCategoryOptionsByItem" parameterType="int" resultType="map">
	    SELECT optionid, optionname
	    FROM category_option
	    WHERE itemid = #{itemid}
	</select>
	
	<select id="getRecipeCount" resultType="int" parameterType="list">
	    SELECT COUNT(*)
	    FROM recipepost r
	    <where>
	        <if test="categoryOptions != null and categoryOptions.size() > 0">
	            AND (
	                r.typeid IN
	                <foreach collection="categoryOptions" item="opt" open="(" separator="," close=")">
	                    #{opt}
	                </foreach>
	                OR r.situationid IN
	                <foreach collection="categoryOptions" item="opt" open="(" separator="," close=")">
	                    #{opt}
	                </foreach>
	                OR r.methodid IN
	                <foreach collection="categoryOptions" item="opt" open="(" separator="," close=")">
	                    #{opt}
	                </foreach>
	                OR r.peopleid IN
	                <foreach collection="categoryOptions" item="opt" open="(" separator="," close=")">
	                    #{opt}
	                </foreach>
	                OR r.timeid IN
	                <foreach collection="categoryOptions" item="opt" open="(" separator="," close=")">
	                    #{opt}
	                </foreach>
	                OR r.difficultyid IN
	                <foreach collection="categoryOptions" item="opt" open="(" separator="," close=")">
	                    #{opt}
	                </foreach>
	            )
	        </if>
	    </where>
	</select>

	<select id="getRecipeList" resultType="com.recipetime.find.Model.Post" parameterType="map">
	    SELECT *
	    FROM recipepost r
	    <where>
	        <if test="categoryOptions != null and categoryOptions.size() > 0">
	            AND (
	                r.typeid IN
	                <foreach collection="categoryOptions" item="opt" open="(" separator="," close=")">
	                    #{opt}
	                </foreach>
	                OR r.situationid IN
	                <foreach collection="categoryOptions" item="opt" open="(" separator="," close=")">
	                    #{opt}
	                </foreach>
	                OR r.methodid IN
	                <foreach collection="categoryOptions" item="opt" open="(" separator="," close=")">
	                    #{opt}
	                </foreach>
	                OR r.peopleid IN
	                <foreach collection="categoryOptions" item="opt" open="(" separator="," close=")">
	                    #{opt}
	                </foreach>
	                OR r.timeid IN
	                <foreach collection="categoryOptions" item="opt" open="(" separator="," close=")">
	                    #{opt}
	                </foreach>
	                OR r.difficultyid IN
	                <foreach collection="categoryOptions" item="opt" open="(" separator="," close=")">
	                    #{opt}
	                </foreach>
	            )
	        </if>
	    </where>
	    ORDER BY recipewritedate DESC
	    LIMIT #{size} OFFSET #{offset}
	</select>

    <!-- 상세조회: params: recipeid, currentUserId, isAdmin -->
    <select id="getPostById" resultType="com.recipetime.find.Model.Post">
	    SELECT *
	    FROM recipepost
	    WHERE recipeid = #{recipeid}
	      AND (
	            isprivate = 0
	            OR userid = #{currentUserId}
	            OR #{accessLevel} = 'manager'
	          )
	</select>

    <update id="deactivatePost" parameterType="int">
        UPDATE recipepost
        SET recipedeactivate = 1,
            isprivate = 1,
            recipedeactivatedate = NOW()
        WHERE recipeid = #{recipeid}
    </update>

    <!-- 카테고리: item / option -->
    <resultMap type="com.recipetime.find.Model.CategoryItem" id="itemMap">
   	<id column="itemid" property="itemid" />
   	<result column="itemname" property="itemname" />
   	<result column="itemparam" property="itemparam" />
   	<collection property="optionList" ofType="com.recipetime.find.Model.CategoryOption">
   	<id column="optionid" property="optionid" />
   	<result column="optionname" property="optionname" />
   	<result column="itemid" property="itemid" />
   	</collection>
    </resultMap>
    
    <select id="listCategoryItems" resultMap="itemMap">
        SELECT i.itemid, i.itemname, i.itemparam, o.itemid, o.optionid, o.optionname
        FROM category_item i LEFT OUTER JOIN category_option o on i.itemid = o.itemid
        ORDER BY i.itemid
    </select>

    <select id="listCategoryOptionsByItemId" parameterType="int" resultType="com.recipetime.find.Model.CategoryOption">
        SELECT optionid, itemid, optionname
        FROM category_option
        WHERE itemid = #{itemid}
        ORDER BY optionid
    </select>
 
    
    <sql id="search">
    	<where>
    		<if test="keyword!=null and keyword!=''">
    			AND recipetitle LIKE CONCAT(CONCAT('%', #{keyword}), '%')
    			OR t.tagname LIKE CONCAT('%', #{keyword}, '%')
    		</if>
    		<if test="typeid!=0">
    			AND typeid=#{typeid}
    		</if>
    		<if test="situationid!=0">
    			AND situationid=#{situationid}
    		</if>
    		<if test="methodid!=0">
    			AND methodid=#{methodid}
    		</if>
    		<if test="peopleid!=0">
    			AND peopleid=#{peopleid}
    		</if>
    		<if test="timeid!=0">
    			AND timeid=#{timeid}
    		</if>
    		<if test="difficultyid!=0">
    			AND difficultyid=#{difficultyid}
    		</if>
    	</where>   	
    </sql>
    
    <select id="postlist" resultType="com.recipetime.find.Model.Post">
    	SELECT *
    	FROM recipepost p LEFT OUTER JOIN recipetag t on p.recipeid = t.recipeid
    	<include refid="search"></include> 
    </select>

</mapper>